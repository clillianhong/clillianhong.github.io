{"version":3,"sources":["Components/NavBar.js","images/aboutimage.jpg","Components/FacebookHorizon/HorizonLogo.js","Components/FacebookHorizon/Hands.js","Components/Text.js","Components/WordSwarm.js","Components/MultiWordSwarm.js","Components/Swarm.js","Components/Effects/Bloom.js","Components/Horizon_Content.js","Components/FishSwarm.js","Components/Lillian_Content.js","Components/Airplane.js","Components/Resume_Content.js","Components/Thonker.js","Components/Amazon_Content.js","Hooks/WindowDimensions.js","Components/Content.js","Containers/LandingPage/LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["PageType","HOME","ABOUT","ART","FB","NavBar","props","setChosenTab","resetChosenTab","setDefaultTab","onMouseEnter","type","className","id","onClick","onMouseLeave","window","open","AMAZON","HorizonLogo","mesh","useRef","logo","useLoader","GLTFLoader","useState","theta","useFrame","current","rotation","z","Math","PI","y","position","set","cos","ref","object","scene","Hands","gltf","layers","event","Text","word","textOptions","font","THREE","parse","Roboto_Bold","size","height","attach","args","require","WordSwarm","count","mouse","color","useThree","viewport","dummy","width","useMemo","particles","temp","i","t","random","factor","speed","xFactor","yFactor","zFactor","push","mx","my","state","forEach","particle","a","sin","b","s","scale","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","zip","MultiWordSwarm","words","counts","colors","together","map","w","Swarm","matColor","BloomEffect","layer","bloomComposer","gl","camera","aspect","useEffect","setSize","render","attachArray","extend","Effects","UnrealBloomPass","OrbitCam","orbit","domElement","update","OrbitControls","Horizon","onMouseMove","useCallback","x","clientX","clientY","innerWidth","innerHeight","onMouseUp","onMouseDown","intensity","penumbra","angle","castShadow","distance","fallback","down","FishSwarm","speedfactor","forwardVector","path","geo","mat","distanceFactor","useGLTF","nodes","materials","targetVec","currentVec","forwardVec","rot","eul","setFromEuler","target","currentPos","startQuat","oldPos","dir","sub","normalize","newPos","add","multiplyScalar","targetQuat","setFromUnitVectors","angleTo","rotateTowards","setFromQuaternion","distanceTo","geometry","Ocean","Airplane","m_2PI","m_3PI","posOffset","m_Pivot","m_Phase","m_turn_Phase","m_Invert","lastUpdate","Date","now","stop","dt","m_PivotOffset","onPointerOver","onPointerOut","Resume","Thonker","rotateSlow","Amazon","getWindowDimensions","Content","chosenTab","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","LandingPage","defaultTab","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c93748e0.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\n\n\nexport const PageType = {\n    HOME: 1,\n    ABOUT: 2,\n    ART: 4,\n    FB: 5,\n}\n\n\nconst NavBar = props => {\n\n    const { setChosenTab, resetChosenTab, setDefaultTab } = props;\n    const pages = ['home', 'about', 'experience', 'art'];\n\n    const onMouseEnter = (type) => {\n        setChosenTab(type);\n    }\n\n    return (\n        <>\n\n            <div className=\"absolute inset-x-0 bottom-0 p-20\">\n                <nav className=\"h-1/4 w-auto bg-transparent flex items-center justify-center rounded-lg\">\n                    <ul className=\"flex flex-row items-center space-x-10 bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-blue-500\">\n\n                        <li id=\"home\">\n                            <div className=\"font-mono font-extrabold hover:text-white text-transparent\" onClick={() => setDefaultTab(PageType.HOME)} onMouseEnter={() => onMouseEnter(PageType.HOME)} onMouseLeave={resetChosenTab}>\n                                home\n                        </div>\n                        </li>\n                        <li>\n                            <div className=\"font-mono hover:text-white\" onClick={() => setDefaultTab(PageType.ABOUT)} onMouseEnter={() => onMouseEnter(PageType.ABOUT)} onMouseLeave={resetChosenTab}>lillian</div>\n                        </li>\n                        <li>\n                            <div className=\"font-mono hover:text-white\" onClick={() => window.open(\"https://www.instagram.com/art.czar.lillian/\")} >art</div>\n                        </li >\n                        <li>\n                            <div className=\"font-mono hover:text-white\" >|</div>\n                        </li >\n                        <li>\n                            <div className=\"font-mono hover:text-white\" onClick={() => setDefaultTab(PageType.FB)} onMouseEnter={() => onMouseEnter(PageType.FB)} onMouseLeave={resetChosenTab}>oculus</div>\n                        </li >\n                        <li>\n                            <div className=\"font-mono hover:text-white\" onClick={() => setDefaultTab(PageType.AMAZON)} onMouseEnter={() => onMouseEnter(PageType.AMAZON)} onMouseLeave={resetChosenTab}>amazon</div>\n                        </li>\n                    </ul >\n                </nav >\n            </div >\n        </>\n    );\n\n}\n\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/aboutimage.bae349cc.jpg\";","import React, { useRef, useState, Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport { useLoader, useFrame, } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nfunction HorizonLogo(props) {\n    const mesh = useRef()\n    // This reference will give us direct access to the mesh\n    const logo = useLoader(GLTFLoader, process.env.PUBLIC_URL + '/models/horizonlogo.gltf')\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n    let theta = 0;\n\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(() => {\n        theta += 0.03;\n        if (theta == 100) {\n            theta = 0;\n        }\n        mesh.current.rotation.z = 30 * Math.PI / 180;\n        mesh.current.rotation.y += 0.01\n        mesh.current.position.set(0, 1 + 1.2 * Math.cos(theta), 0)\n    }\n    )\n\n    return (\n        <mesh\n            ref={mesh}>\n            <primitive object={logo.scene} />\n        </mesh>\n    )\n}\n\nexport default HorizonLogo;","import React, { useRef, useState, Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport { useLoader, useFrame, } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nfunction Hands(props) {\n\n    const gltf = useLoader(GLTFLoader, process.env.PUBLIC_URL + '/models/cuppedhands.gltf')\n    // This reference will give us direct access to the mesh\n    const mesh = useRef()\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(() => {\n        mesh.current.rotation.y += 0.01;\n    })\n\n    return (\n        <mesh\n            layers={1}\n            onClick={(event) => window.open('https://www.oculus.com/facebook-horizon/')}\n            ref={mesh}>\n            <primitive layers={1} object={gltf.scene} />\n        </mesh>\n    )\n}\n\nexport default Hands;","import * as THREE from 'three'\nimport React, { forwardRef, useMemo, useRef, useLayoutEffect } from 'react'\nimport { useLoader, } from '@react-three/fiber'\nimport Roboto_Bold from '../font/Roboto_Bold.json';\n\n\nconst Text = ({ word }) => {\n    const font = new THREE.FontLoader().parse(Roboto_Bold);\n    // const displayWord = () => sample(words)\n\n    // configure font geometry\n    const textOptions = {\n        font,\n        size: 2,\n        height: 0.2\n    };\n\n\n    return (\n        <textGeometry attach='geometry' args={[word, textOptions]} />\n    )\n}\n\nexport default Text;\n","import React, { useRef, Suspense, useMemo, useEffect, hover, useLayoutEffect } from 'react'\nimport * as THREE from 'three'\nimport { extend, Canvas, useThree, useFrame } from '@react-three/fiber'\nimport Text from './Text'\nvar sample = require('lodash/sample');\n\nfunction WordSwarm({ count, mouse, word, color }) {\n    const mesh = useRef()\n    const light = useRef()\n    const { size, viewport } = useThree()\n    const aspect = size.width / viewport.width\n\n    const dummy = useMemo(() => new THREE.Object3D(), [])\n    // Generate some random positions, speed factors and timings\n    const particles = useMemo(() => {\n        const temp = []\n        for (let i = 0; i < count; i++) {\n            const t = Math.random() * 100\n            const factor = 20 + Math.random() * 100\n            const speed = 0.01 + Math.random() / 200\n            const xFactor = -50 + Math.random() * 100\n            const yFactor = -50 + Math.random() * 100\n            const zFactor = -50 + Math.random() * 100\n            temp.push({ t, factor, speed, xFactor, yFactor, zFactor, mx: 0, my: 0 })\n        }\n        return temp\n    }, [count])\n    // The innards of this hook will run every frame\n    useFrame(state => {\n        // Makes the light follow the mouse\n        // light.current.position.set(mouse.current[0] / aspect, -mouse.current[1] / aspect, 0)\n        // Run through the randomized data to calculate some movement\n        particles.forEach((particle, i) => {\n            let { t, factor, speed, xFactor, yFactor, zFactor } = particle\n            // There is no sense or reason to any of this, just messing around with trigonometric functions\n            t = particle.t += speed / 2\n            const a = Math.cos(t) + Math.sin(t * 1) / 10\n            const b = Math.sin(t) + Math.cos(t * 2) / 10\n            const s = Math.cos(t)\n            particle.mx += (mouse.current[0] - particle.mx) * 0.01\n            particle.my += (mouse.current[1] * -1 - particle.my) * 0.01\n            // Update the dummy object\n            dummy.position.set(\n                (particle.mx / 10) * a + xFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 1) * factor) / 10,\n                (particle.my / 10) * b + yFactor + Math.sin((t / 10) * factor) + (Math.cos(t * 2) * factor) / 10,\n                (particle.my / 10) * b + zFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 3) * factor) / 10\n            )\n            dummy.scale.set(s, s, s)\n            dummy.rotation.set(s * 5, s * 5, s * 5)\n            dummy.updateMatrix()\n            // And apply the matrix to the instanced item\n            mesh.current.setMatrixAt(i, dummy.matrix)\n        })\n        mesh.current.instanceMatrix.needsUpdate = true\n    })\n    return (\n        <>\n            {/* <pointLight ref={light} position={[0, 200, 0]} distance={40} intensity={8} color=\"lightblue\" /> */}\n            <instancedMesh ref={mesh} args={[null, null, count]}>\n                <Text word={word} />\n                <meshPhongMaterial attach=\"material\" color={color} />\n            </instancedMesh>\n        </>\n    )\n}\n\nexport default WordSwarm;\n\n\n\n// const tempObject = new THREE.Object3D()\n// const tempColor = new THREE.Color()\n// const data = new Array(1000).fill().map(() => ({ color: niceColors[17][Math.floor(Math.random() * 5)], scale: 1 }))\n\n// function Boxes() {\n//   const [hovered, set] = useState()\n//   const colorArray = useMemo(() => Float32Array.from(new Array(1000).fill().flatMap((_, i) => tempColor.set(data[i].color).toArray())), [])\n//   const meshRef = useRef()\n//   const prevRef = useRef()\n//   useEffect(() => void (prevRef.current = hovered), [hovered])\n//   useFrame((state) => {\n//     const time = state.clock.getElapsedTime()\n//     meshRef.current.rotation.x = Math.sin(time / 4)\n//     meshRef.current.rotation.y = Math.sin(time / 2)\n//     let i = 0\n//     for (let x = 0; x < 10; x++)\n//       for (let y = 0; y < 10; y++)\n//         for (let z = 0; z < 10; z++) {\n//           const id = i++\n//           tempObject.position.set(5 - x, 5 - y, 5 - z)\n//           tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(z / 4 + time)\n//           tempObject.rotation.z = tempObject.rotation.y * 2\n//           if (hovered !== prevRef.Current) {\n//             tempColor.set(id === hovered ? 'white' : data[id].color).toArray(colorArray, id * 3)\n//             meshRef.current.geometry.attributes.color.needsUpdate = true\n//           }\n//           const scale = (data[id].scale = THREE.MathUtils.lerp(data[id].scale, id === hovered ? 4 : 1, 0.1))\n//           tempObject.scale.setScalar(scale)\n//           tempObject.updateMatrix()\n//           meshRef.current.setMatrixAt(id, tempObject.matrix)\n//         }\n//     meshRef.current.instanceMatrix.needsUpdate = true\n//   })\n//   return (\n//     <instancedMesh ref={meshRef} args={[null, null, 1000]} onPointerMove={(e) => set(e.instanceId)} onPointerOut={(e) => set(undefined)}>\n//       <boxGeometry args={[0.4, 0.4, 0.4]}>\n//         <instancedBufferAttribute attachObject={['attributes', 'color']} args={[colorArray, 3]} />\n//       </boxGeometry>\n//       <meshPhongMaterial vertexColors={THREE.VertexColors} />\n//     </instancedMesh>\n//   )\n// }\n","import WordSwarm from './WordSwarm'\nvar zip = require('lodash/zip');\n\nconst MultiWordSwarm = ({ mouse, words, counts, colors }) => {\n\n    const together = zip(words, counts, colors)\n\n    return (\n        <>\n            {together.map((w) => <WordSwarm key={w[0]} count={w[1]} mouse={mouse} word={w[0]} color={w[2]} />)}\n        </ >\n    );\n\n}\n\nexport default MultiWordSwarm;","import React, { useRef, Suspense, useMemo, useEffect, hover, useLayoutEffect } from 'react'\nimport * as THREE from 'three'\nimport { extend, Canvas, useThree, useFrame } from '@react-three/fiber'\n\nfunction Swarm({ count, mouse, particle, matColor }) {\n    const mesh = useRef()\n    const light = useRef()\n    const { size, viewport } = useThree()\n    const aspect = size.width / viewport.width\n\n    const dummy = useMemo(() => new THREE.Object3D(), [])\n    // Generate some random positions, speed factors and timings\n    const particles = useMemo(() => {\n        const temp = []\n        for (let i = 0; i < count; i++) {\n            const t = Math.random() * 100\n            const factor = 20 + Math.random() * 100\n            const speed = 0.01 + Math.random() / 200\n            const xFactor = -50 + Math.random() * 100\n            const yFactor = -50 + Math.random() * 100\n            const zFactor = -50 + Math.random() * 100\n            temp.push({ t, factor, speed, xFactor, yFactor, zFactor, mx: 0, my: 0 })\n        }\n        return temp\n    }, [count])\n    // The innards of this hook will run every frame\n    useFrame(state => {\n        // Makes the light follow the mouse\n        // light.current.position.set(mouse.current[0] / aspect, -mouse.current[1] / aspect, 0)\n        // Run through the randomized data to calculate some movement\n        particles.forEach((particle, i) => {\n            let { t, factor, speed, xFactor, yFactor, zFactor } = particle\n            // There is no sense or reason to any of this, just messing around with trigonometric functions\n            t = particle.t += speed / 2\n            const a = Math.cos(t) + Math.sin(t * 1) / 10\n            const b = Math.sin(t) + Math.cos(t * 2) / 10\n            const s = Math.cos(t)\n            particle.mx += (mouse.current[0] - particle.mx) * 0.01\n            particle.my += (mouse.current[1] * -1 - particle.my) * 0.01\n            // Update the dummy object\n            dummy.position.set(\n                (particle.mx / 10) * a + xFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 1) * factor) / 10,\n                (particle.my / 10) * b + yFactor + Math.sin((t / 10) * factor) + (Math.cos(t * 2) * factor) / 10,\n                (particle.my / 10) * b + zFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 3) * factor) / 10\n            )\n            dummy.scale.set(s, s, s)\n            dummy.rotation.set(s * 5, s * 5, s * 5)\n            dummy.updateMatrix()\n            // And apply the matrix to the instanced item\n            mesh.current.setMatrixAt(i, dummy.matrix)\n        })\n        mesh.current.instanceMatrix.needsUpdate = true\n    })\n    return (\n        <>\n            {/* <pointLight ref={light} position={[0, 200, 0]} distance={40} intensity={8} color=\"lightblue\" /> */}\n            <instancedMesh ref={mesh} args={[null, null, count]}>\n                {particle}\n\n                <meshPhongMaterial attach=\"material\" color={matColor} />\n            </instancedMesh>\n        </>\n    )\n}\n\nexport default Swarm; ","import React, { useRef, Suspense, useMemo, useEffect, useCallback, set } from 'react'\nimport * as THREE from 'three'\nimport { extend, Canvas, useThree, useFrame } from '@react-three/fiber'\nimport { Effects } from '@react-three/drei'\nextend({ Effects })\n\nexport function BloomEffect({ layer }) {\n    const bloomComposer = useRef()\n    // const normalComposer = useRef()\n    // const finalComposer = useRef()\n    const occlusionRenderTarget = useMemo(() => new THREE.WebGLRenderTarget(), [])\n    const bloomRenderTarget = useMemo(() => new THREE.WebGLRenderTarget(), [])\n    const { scene, gl, size, camera } = useThree()\n    const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size])\n    useEffect(() => {\n        void bloomComposer.current.setSize(size.width, size.height)\n        // void normalComposer.current.setSize(size.width, size.height)\n        // void finalComposer.current.setSize(size.width, size.height)\n    }, [size])\n    useFrame(() => {\n        camera.layers.set(0);\n        bloomComposer.current.render()\n\n    }, 1)\n    return (\n        <>\n            <effectComposer ref={bloomComposer} args={[gl]} >\n                <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n                <unrealBloomPass attachArray=\"passes\" args={[aspect, 0.3, 1, 0]} />\n            </effectComposer>\n        </>\n\n    )\n}","import React, { useRef, Suspense, useMemo, useEffect, useCallback, set } from 'react'\nimport HorizonLogo from './FacebookHorizon/HorizonLogo'\nimport Hand from './FacebookHorizon/Hands'\nimport * as THREE from 'three'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { extend, Canvas, useThree, useFrame } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\nimport MultiWordSwarm from './MultiWordSwarm'\nimport Swarm from './Swarm'\nimport { BloomEffect } from './Effects/Bloom'\n\nextend({ UnrealBloomPass })\n\nconst OrbitCam = () => {\n    const orbit = useRef()\n    const {\n        camera,\n        gl: { domElement },\n    } = useThree();\n\n    camera.position.set(15, 20, 0);\n\n    useFrame(() => orbit.current && orbit.current.update());\n\n    return <OrbitControls ref={orbit} args={[camera, domElement]} />\n}\n\n// function Effect({ layer }) {\n//     const bloomComposer = useRef()\n//     // const normalComposer = useRef()\n//     // const finalComposer = useRef()\n//     const occlusionRenderTarget = useMemo(() => new THREE.WebGLRenderTarget(), [])\n//     const bloomRenderTarget = useMemo(() => new THREE.WebGLRenderTarget(), [])\n//     const { scene, gl, size, camera } = useThree()\n//     const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size])\n//     useEffect(() => {\n//         void bloomComposer.current.setSize(size.width, size.height)\n//         // void normalComposer.current.setSize(size.width, size.height)\n//         // void finalComposer.current.setSize(size.width, size.height)\n//     }, [size])\n//     useFrame(() => {\n//         camera.layers.set(0);\n//         bloomComposer.current.render()\n\n//     }, 1)\n//     return (\n//         <>\n//             <effectComposer ref={bloomComposer} args={[gl]} >\n//                 <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n//                 <unrealBloomPass attachArray=\"passes\" args={[aspect, 0.3, 1, 0]} />\n//             </effectComposer>\n//         </>\n\n//     )\n// }\n\n\n\nconst Horizon = (props) => {\n\n    const mouse = useRef([0, 0])\n    const horizon = useRef()\n    const onMouseMove = useCallback(({ clientX: x, clientY: y }) => (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]), []);\n\n\n    return (<div className=\"object-cover h-full w-full\">\n        <Canvas\n            onMouseMove={onMouseMove}\n            onMouseUp={() => set(false)}\n            onMouseDown={() => set(true)}\n        >\n            <ambientLight intensity={0.5} />\n\n            <spotLight\n                intensity={2}\n                position={[40, 200, 50]}\n                shadow-bias={-0.00005}\n                penumbra={1}\n                angle={Math.PI / 6}\n                shadow-mapSize-width={2048}\n                shadow-mapSize-height={2048}\n                castShadow={true}\n            />\n            <pointLight position={[0, 1000, 0]} distance={40} intensity={8} color=\"lightblue\" />\n            <Suspense fallback={null}>\n                <Swarm count={100} mouse={mouse} matColor={\"#ac54ff\"} particle={<dodecahedronBufferGeometry attach=\"geometry\" args={[0.2, 0]} />\n                } />\n                <MultiWordSwarm\n                    mouse={mouse}\n                    words={['hand tracking', 'virtual reality', 'oculus', 'horizon']}\n                    counts={[10, 12, 8, 10]}\n                    colors={[\"#ff78fd\", \"#9000ff\", \"#ff61f2\", \"#001aff\"]} />\n                < OrbitCam />\n                <Hand />\n                <HorizonLogo />\n                <BloomEffect down={false} />\n            </Suspense>\n\n        </Canvas>|\n\n    </div >\n    );\n\n\n\n}\n\nexport default Horizon;","import React, { useRef, Suspense, useMemo, useEffect, hover, useLayoutEffect, useState } from 'react'\nimport * as THREE from 'three'\nimport { extend, Canvas, useThree, useFrame } from '@react-three/fiber'\nimport { useGLTF } from '@react-three/drei'\n\nconst FishSwarm = ({ count, mouse, speedfactor, scale, forwardVector, path, geo, mat }) => {\n    const distanceFactor = 100;\n    const mesh = useRef()\n    const light = useRef()\n    const { size, viewport } = useThree()\n    const aspect = size.width / viewport.width\n    const { nodes, materials } = useGLTF(path)\n\n\n    const dummy = useMemo(() => new THREE.Object3D(), [])\n    // Generate some random positions, speed factors and timings\n    const particles = useMemo(() => {\n        const temp = []\n        for (let i = 0; i < count; i++) {\n            const t = Math.random() * 100\n            const factor = 20 + Math.random() * 100\n            const speed = speedfactor + Math.random() / 200\n            const xFactor = -50 + Math.random() * 100\n            const yFactor = -50 + Math.random() * 100\n            const zFactor = -50 + Math.random() * 100\n            var targetVec = new THREE.Vector3(-(distanceFactor * 2) + Math.random() * distanceFactor * 2, -(distanceFactor * 2) + Math.random() * distanceFactor * 2, -(distanceFactor) + Math.random() * distanceFactor * 2)\n\n            var currentVec = new THREE.Vector3(-(distanceFactor * 2) + Math.random() * distanceFactor * 2, -(distanceFactor * 2) + Math.random() * distanceFactor * 2, -(distanceFactor) + Math.random() * distanceFactor * 2)\n\n            var forwardVec = forwardVector\n            var rot = new THREE.Quaternion()\n            var eul = new THREE.Euler();\n            eul.set(0, 0, 0)\n            rot.setFromEuler(eul)\n\n            temp.push({ t, factor, speed: speed, xFactor, yFactor, zFactor, mx: 0, my: 0, target: targetVec, currentPos: currentVec, forwardVec: forwardVec, startQuat: rot })\n        }\n        return temp\n    }, [count])\n    // The innards of this hook will run every frame\n    useFrame(state => {\n        // Makes the light follow the mouse\n        // light.current.position.set(mouse.current[0] / aspect, -mouse.current[1] / aspect, 0)\n        // Run through the randomized data to calculate some movement\n        particles.forEach((particle, i) => {\n            let { t, factor, speed, xFactor, yFactor, zFactor } = particle\n            // There is no sense or reason to any of this, just messing around with trigonometric functions\n            t = particle.t += speed / 2\n            const a = Math.cos(t) + Math.sin(t * 1) / 10\n            const b = Math.sin(t) + Math.cos(t * 2) / 10\n            const s = Math.cos(t)\n            particle.mx += (mouse.current[0] - particle.mx) * 0.01\n            particle.my += (mouse.current[1] * -1 - particle.my) * 0.01\n\n            if (particle.currentPos != null) {\n                var oldPos = new THREE.Vector3(particle.currentPos.x, particle.currentPos.y, particle.currentPos.z)\n                var dir = new THREE.Vector3(particle.target.x, particle.target.y, particle.target.z)\n\n                dir.sub(particle.currentPos)\n                dir.normalize()\n\n                // console.log(\"TARGET1 \" + particle.target.x + \" \" + particle.target.y + \" \" + particle.target.z)\n                // console.log(\"TARGET 2\" + particle.currentPos.x + \" \" + particle.currentPos.y + \" \" + particle.currentPos.z)\n\n                // console.log(\"target dir \" + dir.x + \" \" + dir.y + \" \" + dir.z)\n                var newPos = oldPos.add(dir.multiplyScalar(particle.speed))\n                particle.currentPos.set(newPos.x, newPos.y, newPos.z)\n                // Update the dummy object\n                dummy.position.set(\n                    newPos.x, newPos.y, newPos.z\n                )\n\n                dir.normalize()\n\n                var targetQuat = new THREE.Quaternion()\n                targetQuat.setFromUnitVectors(particle.forwardVec, dir)\n\n                if (particle.startQuat.angleTo(targetQuat))\n                    particle.startQuat.rotateTowards(targetQuat, 0.05)\n\n                dummy.scale.set(scale, scale, scale)\n                // dummy.rotation.set(0, 0, 0)\n                dummy.rotation.setFromQuaternion(particle.startQuat)\n                dummy.updateMatrix()\n\n                //update \n                if (particle.currentPos.distanceTo(particle.target) < 1) {\n                    // particle.forwardVec.set(dir.x, dir.y, dir.z)\n                    particle.startQuat.set(targetQuat.x, targetQuat.y, targetQuat.z, targetQuat.w)\n                    var target = new THREE.Vector3(-(distanceFactor / 2) + Math.random() * distanceFactor, -(distanceFactor / 2) + Math.random() * distanceFactor, -(distanceFactor / 2) + Math.random() * distanceFactor);\n                    target.add(particle.currentPos)\n                    particle.target.set(target.x, target.y, target.z)\n\n                }\n\n                // And apply the matrix to the instanced item\n                mesh.current.setMatrixAt(i, dummy.matrix)\n            }\n\n\n        })\n        mesh.current.instanceMatrix.needsUpdate = true\n    })\n    return (\n        <>\n            {/* <pointLight ref={light} position={[0, 200, 0]} distance={40} intensity={8} color=\"lightblue\" /> */}\n            <instancedMesh ref={mesh} args={[nodes[geo].geometry, materials[mat], count]}>\n                {/* {particle} */}\n                {/* <Clownfish /> */}\n                {/* <dodecahedronBufferGeometry attach=\"geometry\" args={[0.2, 0]} /> */}\n                {/* <meshPhongMaterial attach=\"material\" color=\"#cc00ff\" /> */}\n            </instancedMesh>\n        </>\n    )\n}\n\nexport default FishSwarm;\n\n//     geometry={nodes['12265_Fish_v1_L2'].geometry}\n        //     material={materials['01___12265_Fish']}","import React, { useRef, Suspense, useMemo, useEffect, useCallback, set } from 'react'\nimport * as THREE from 'three'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { useLoader, extend, Canvas, useThree, useFrame } from '@react-three/fiber'\nimport { OrbitControls, useGLTF } from '@react-three/drei'\nimport Swarm from './Swarm'\nimport MultiWordSwarm from './MultiWordSwarm'\nimport FishSwarm from './FishSwarm'\n\nextend({ UnrealBloomPass })\n\nconst OrbitCam = () => {\n    const orbit = useRef()\n    const {\n        camera,\n        gl: { domElement },\n    } = useThree();\n\n    camera.position.set(15, 20, 0);\n\n    useFrame(() => orbit.current && orbit.current.update());\n\n    return <OrbitControls ref={orbit} args={[camera, domElement]} />\n}\n\n\nconst Ocean = (props) => {\n\n    const mouse = useRef([0, 0])\n    const onMouseMove = useCallback(({ clientX: x, clientY: y }) => (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]), []);\n\n    //fish\n\n    return (<div className=\"object-cover h-full w-full\">\n        <Canvas\n            onMouseMove={onMouseMove}\n            onMouseUp={() => set(false)}\n            onMouseDown={() => set(true)}\n        >\n            <ambientLight color={'#c7fffc'} intensity={0.5} />\n            {/* <pointLight position={[-5, 5, 5]} /> */}\n            <spotLight\n                intensity={1}\n                position={[40, -400, 50]}\n                shadow-bias={-0.00005}\n                penumbra={1}\n                angle={Math.PI / 6}\n                shadow-mapSize-width={2048}\n                shadow-mapSize-height={2048}\n                castShadow={true}\n            />\n            <Suspense fallback={null}>\n                <MultiWordSwarm\n                    mouse={mouse}\n                    words={['fish', \"SHARK??\"]}\n                    counts={[100, 1]}\n                    colors={[\"#000000\", \"#FF0000\"]} />\n                <FishSwarm count={20} mouse={mouse} speedfactor={0.04} forwardVector={new THREE.Vector3(0, 0, 1)} scale={12} path={process.env.PUBLIC_URL + '/models/angelfish.gltf'} geo={'13009_Coral_Beauty_Angelfish_v1_l3'} mat={'13009_Coral_Beauty_Angelfish_v1'} />\n                <FishSwarm count={30} mouse={mouse} speedfactor={0.1} forwardVector={new THREE.Vector3(-1, 0, 0)} scale={0.8} path={process.env.PUBLIC_URL + '/models/clownfish.gltf'} geo={'12265_Fish_v1_L2'} mat={'01___12265_Fish'} />\n                <FishSwarm count={10} mouse={mouse} speedfactor={0.1} forwardVector={new THREE.Vector3(0, 0, 1)} scale={5} path={process.env.PUBLIC_URL + '/models/bluegreenfish.gltf'} geo={'13007_Blue-Green_Reef_Chromis_v2_l3'} mat={'13007_Blue_Green_Reef_Chromis_v1'} />\n                < OrbitCam />\n                <Swarm count={100} mouse={mouse} particle={<dodecahedronBufferGeometry attach=\"geometry\" args={[0.2, 0]} />} matColor={'#31d67e'} />\n\n            </Suspense>\n\n        </Canvas>|\n\n    </div >\n    );\n\n\n\n}\n\nexport default Ocean;","import React, { useRef, useState, Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport { useLoader, useFrame, } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport * as THREE from 'three'\n\nfunction Airplane(props) {\n\n    const gltf = useLoader(GLTFLoader, process.env.PUBLIC_URL + '/models/paperairplane.gltf')\n    // This reference will give us direct access to the mesh\n    const mesh = useRef()\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n    // Rotate mesh every frame, this is outside of React without overhead\n\n    const upVector = new THREE.Vector3(0, 1, 0);\n    var m_Speed = .003;\n    const m_YScale = 15;\n    const m_XScale = 10;\n    const m_2PI = Math.PI * 2\n    const m_3PI = 1 / 3 * Math.PI\n    const posOffset = new THREE.Vector3(0, 0, -15);\n    var m_Pivot = new THREE.Vector3(0, 0, 0);\n    var m_Phase = 0;\n    var m_turn_Phase = 0;\n    var m_Invert = false;\n    var m_turn_Invert = false;\n    var lastUpdate = Date.now();\n    var stop = false;\n\n    useFrame(() => {\n        var now = Date.now();\n        var dt = now - lastUpdate;\n        lastUpdate = now;\n\n        if (stop) {\n            return\n        }\n\n        //mesh.current.rotation.z = 0.5 * Math.cos(m_Phase);\n        mesh.current.rotation.x = 0.2 * Math.cos(m_Phase);\n        mesh.current.rotation.y = (m_Invert ? 1 : -1) * 4 * Math.cos(0.29 * m_Phase) + (m_Invert ? 0 : Math.PI);\n\n        var m_PivotOffset = new THREE.Vector3(0, 0, 1);\n        m_PivotOffset.multiplyScalar(2 * m_YScale)\n\n        m_Phase += m_Speed * dt;\n        m_turn_Phase += m_Speed * dt;\n        if (m_Phase > m_2PI) {\n            m_Invert = !m_Invert;\n            m_Phase -= m_2PI;\n        } if (m_turn_Phase > m_3PI) {\n            m_turn_Invert = !m_Invert;\n            m_turn_Phase -= m_3PI;\n        }\n        if (m_turn_Phase < 0) m_turn_Phase += m_3PI\n        if (m_Phase < 0) m_Phase += m_2PI;\n\n        var newPos = new THREE.Vector3(m_Pivot.x, m_Pivot.y, m_Pivot.z)\n        if (m_Invert) {\n            newPos.add(m_PivotOffset)\n        }\n\n        var x = Math.sin(m_Phase) * m_XScale;\n        var y = Math.cos(m_Phase) * (m_Invert ? -1 : 1) * m_YScale;\n\n        mesh.current.position.set(newPos.x + x + posOffset.x, newPos.y + posOffset.y, newPos.z + y + posOffset.z)\n    })\n\n    return (\n        <>\n\n            <mesh\n                layers={1}\n                scale={100}\n                onPointerOver={() => {\n                    stop = true\n                }}\n                onPointerOut={() => {\n                    stop = false\n                }}\n                onClick={(event) => window.open(process.env.PUBLIC_URL + \"/lillianhong_resume.pdf\")}\n                ref={mesh}>\n                <primitive layers={1} object={gltf.scene} />\n\n            </mesh>\n        </>\n    )\n}\n\nexport default Airplane;","import React, { useRef, Suspense, useState, useEffect, useCallback, set } from 'react'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { useLoader, extend, Canvas, useThree, useFrame } from '@react-three/fiber'\nimport { OrbitControls, useGLTF } from '@react-three/drei'\nimport Airplane from './Airplane'\n\nextend({ UnrealBloomPass })\n\nconst OrbitCam = () => {\n    const orbit = useRef()\n    const {\n        camera,\n        gl: { domElement },\n    } = useThree();\n\n    camera.position.set(15, 20, 0);\n\n    useFrame(() => orbit.current && orbit.current.update());\n\n    return <OrbitControls ref={orbit} args={[camera, domElement]} />\n}\n\n\nconst Resume = (props) => {\n\n    const mouse = useRef([0, 0])\n    const onMouseMove = useCallback(({ clientX: x, clientY: y }) => (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]), []);\n\n    //fish\n\n    return (<div className=\"object-cover h-full w-full\">\n        <Canvas\n            onMouseMove={onMouseMove}\n            onMouseUp={() => set(false)}\n            onMouseDown={() => set(true)}\n        >\n\n\n            <ambientLight color={\"#0000ff\"} intensity={0.5} />\n            {/* <pointLight position={[-5, 5, 5]} /> */}\n            <spotLight\n                intensity={0.1}\n                position={[40, 100, 50]}\n                shadow-bias={-0.00005}\n                penumbra={1}\n                angle={Math.PI / 6}\n                shadow-mapSize-width={2048}\n                shadow-mapSize-height={2048}\n                castShadow={true}\n            />\n            <Suspense fallback={null}>\n                < OrbitCam />\n                <Airplane />\n            </Suspense>\n\n        </Canvas>|\n\n    </div >\n    );\n\n\n\n}\n\nexport default Resume;","import React, { useRef, useState, Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport { useLoader, useFrame, } from '@react-three/fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nfunction Thonker(props) {\n\n    const gltf = useLoader(GLTFLoader, process.env.PUBLIC_URL + '/models/thonker.gltf')\n    // This reference will give us direct access to the mesh\n    const mesh = useRef()\n\n    const fast = 0.1;\n    const slow = 0.01;\n    var rotateSlow = false;\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(() => {\n        mesh.current.rotation.y += rotateSlow ? slow : fast;\n    })\n\n    return (\n        <mesh\n            layers={1}\n            scale={6000}\n            onPointerOver={() => {\n                rotateSlow = true\n            }}\n            onPointerOut={() => {\n                rotateSlow = false\n            }}\n            onClick={(event) => window.open(\"https://www.amazon.com/\")}\n            ref={mesh}>\n            <primitive layers={1} object={gltf.scene} />\n        </mesh>\n    )\n}\n\nexport default Thonker;","import React, { useRef, Suspense, useState, useEffect, useCallback, set } from 'react'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { useLoader, extend, Canvas, useThree, useFrame } from '@react-three/fiber'\nimport { OrbitControls, useGLTF } from '@react-three/drei'\nimport Thonker from './Thonker'\nimport MultiWordSwarm from './MultiWordSwarm'\n\nextend({ UnrealBloomPass })\n\nconst OrbitCam = () => {\n    const orbit = useRef()\n    const {\n        camera,\n        gl: { domElement },\n    } = useThree();\n\n    camera.position.set(15, 20, 0);\n\n    useFrame(() => orbit.current && orbit.current.update());\n\n    return <OrbitControls ref={orbit} args={[camera, domElement]} />\n}\n\n\nconst Amazon = (props) => {\n\n    const mouse = useRef([0, 0])\n    const onMouseMove = useCallback(({ clientX: x, clientY: y }) => (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]), []);\n\n    //fish\n\n    return (<div className=\"object-cover h-full w-full\">\n        <Canvas\n            onMouseMove={onMouseMove}\n            onMouseUp={() => set(false)}\n            onMouseDown={() => set(true)}\n        >\n\n\n            <ambientLight color={\"#FFFFFF\"} intensity={0.6} />\n            {/* <pointLight position={[-5, 5, 5]} /> */}\n            <spotLight\n                intensity={1}\n                position={[40, 100, 50]}\n                shadow-bias={-0.00005}\n                penumbra={1}\n                angle={Math.PI / 6}\n                shadow-mapSize-width={2048}\n                shadow-mapSize-height={2048}\n                castShadow={true}\n            />\n            <Suspense fallback={null}>\n                < OrbitCam />\n                <MultiWordSwarm\n                    mouse={mouse}\n                    words={['amazon photos', 'facial recognition', 'clustering', 'devops', 'machine learning']}\n                    counts={[10, 12, 8, 5, 10]}\n                    colors={[\"#e09200\", \"#fccf03\", \"#e36200\", \"#ffbc40\", \"#ffcc6e\"]} />\n                <Thonker />\n            </Suspense>\n\n        </Canvas>|\n\n    </div >\n    );\n\n\n\n}\n\nexport default Amazon;","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n","import React, { useState } from 'react';\nimport aboutImage from '../images/aboutimage.jpg';\nimport { PageType } from \"./NavBar\"\nimport Horizon from \"./Horizon_Content\"\nimport Ocean from \"./Lillian_Content\"\nimport Resume from \"./Resume_Content\"\nimport Amazon from \"./Amazon_Content\"\nimport useWindowDimensions from \"../Hooks/WindowDimensions\"\n\nconst Content = (props) => {\n    const { chosenTab } = props;\n    const { height, width } = useWindowDimensions();\n    const [contentImage, setContentImage] = useState(PageType.HOME);\n\n\n    switch (chosenTab) {\n        case PageType.ABOUT:\n            return < div className=\"bg-white h-screen flex h-full w-full items-center justify-center\" > <Ocean width={width} height={height} /> </div >\n            break;\n        case PageType.FB:\n            return < div className=\"bg-white h-screen flex h-full w-full items-center justify-center\" > <Horizon width={width} height={height} /> </div >\n            break;\n        case PageType.HOME:\n            return < div className=\"bg-white h-screen flex h-full w-full items-center justify-center\" >\n                <Resume width={width} height={height} />\n            </div >\n            break;\n        case PageType.AMAZON:\n            return < div className=\"bg-black h-screen flex h-full w-full items-center justify-center\" > <Amazon width={width} height={height} /> </div >\n            break;\n        default:\n            return (< div className=\"bg-white h-screen flex h-full w-full items-center justify-center \" >\n\n            </div >)\n            break;\n    }\n\n}\n\n\n\nexport default Content; \n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavBar, { PageType } from \"../../Components/NavBar\"\nimport Content from \"../../Components/Content\"\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport 'react-pro-sidebar/dist/css/styles.css';\n\n\nconst LandingPage = () => {\n\n    const [defaultTab, setDefaultTab] = useState(PageType.HOME)\n    const [chosenTab, setChosenTab] = useState(PageType.HOME);\n\n    const resetChosenTab = () => {\n        setChosenTab(defaultTab);\n    }\n\n    return (<main id=\"landing\">\n\n\n        <div className=\"flex flex-row h-full w-full absolute\">\n            {/* <NavBar setChosenTab={setChosenTab} resetChosenTab={resetChosenTab} /> */}\n            <Content chosenTab={chosenTab} />\n        </div>\n\n        <div id=\"navbardiv\" className=\"flex h-1/4 w-full absolute inset-x-0 bottom-0\">\n            <NavBar setChosenTab={setChosenTab} resetChosenTab={resetChosenTab} setDefaultTab={setDefaultTab} />\n        </div>\n        <div className=\"flex h-1/6 w-full absolute inset-xy-0 top-0 items-center justify-center text-xs italic\" >\n            [instructions] click objects, drag for orbit camera, two finger swipe for zoom\n        </div>\n\n    </main>);\n}\n\nexport default LandingPage;","import { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport LandingPage from \"./Containers/LandingPage/LandingPage\";\n\n\nconst App = () => (\n  <div className=\"App\">\n    <BrowserRouter>\n      <div>\n        {/* <NavBar /> */}\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </div>\n\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}